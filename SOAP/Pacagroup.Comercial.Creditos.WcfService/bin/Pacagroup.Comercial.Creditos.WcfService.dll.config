<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<!--Creamos las tags para que reconozca nuestra cadena de conexion a la base de datos  -->
	<connectionStrings>
		<add name="CreditosDB" connectionString="Data Source=localhost; Initial Catalog=Creditos; User Id=sa; Password=root" providerName="System.Data.SqlClient"></add>
	</connectionStrings>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.7.2" />
    <httpRuntime targetFramework="4.7.2"/>
  </system.web>
  <system.serviceModel>
	   <bindings>
		  <basicHttpBinding>
			  <!--El atributo closeTimeout es para marcarle cuanto tiempo estará abierta la conexión,
			  maxReceivedMessageSize: este es un atributo será el tamaño máximo en Bytes del mensaje,
			  maxBufferSize: será el tamaño máximo en Bytes de memoria que podrá utilizar nuestro servicio
			  Para asociar eso a nuestro servicio tendremos que agregar Bnding configuration como atributo del
			  endpoint-->
			  <binding name="EnlaceHttp" 
					   closeTimeout="00:10:00"
					 maxReceivedMessageSize="62975"
					  maxBufferSize="62975" 
					  messageEncoding="Text" 
					  textEncoding="utf-8" >
			  </binding>
		  </basicHttpBinding>
		 
			 <netTcpBinding>
			  <binding name="EnlaceTcp" 
					   closeTimeout="00:10:00"
					   maxReceivedMessageSize="62975"
					  maxBufferSize="62975" 
					  maxConnections="10" >
				  <security mode="Transport"> 
					  <!--Con clientCredentialType decimos que solo se podrán conectar usuarios de tipo Windows con
					  credenciales, esta opción generalmente está relacionada con el directorio activo.
					  Por último agreamos la configuracióon del binding en la parte de abajo-->
		    
					  <transport clientCredentialType="Windows" protectionLevel="EncryptAndSign"></transport>
				  </security>
			  </binding>
		  </netTcpBinding> 
		   <!--Aqui va la configuración de binding que utilizaremos para REST.
		   La propiedad crossDomainScriptAccessEnabled es para permitir que el servicio sea consumido de otros
		   dominios externos-->
		   
		   <webHttpBinding>
			   <binding name="EnlaceHTTPRest"
						closeTimeout="00:10:00"
						crossDomainScriptAccessEnabled="true"></binding>
		   </webHttpBinding>
		  
	   
	  </bindings>
	  <services>
		  
		  <service name="Pacagroup.Comercial.Creditos.Implementacion.ClienteService" behaviorConfiguration="ServiceBehavior">
			  <!--Agregamos  la configuración del binding anterior con bindingConfiguration e.g.
			  bindingConfiguration="EnlaceHttp"		bindingConfiguration="EnlaceTcp"
--><!--Los primeros 2 endpoints  EnlaceHttp y netTcpBinding son SOAP-->
			  <endpoint address=""
						binding="basicHttpBinding"	
						bindingConfiguration="EnlaceHttp"	
						contract="Pacagroup.Comercial.Creditos.Contrato.IClienteService"></endpoint>
			  <endpoint address=""
						binding="netTcpBinding"
						bindingConfiguration="EnlaceTcp"
						contract="Pacagroup.Comercial.Creditos.Contrato.IClienteService"></endpoint>
			  <!--Aquí va el endpoint  REST-->
			  <endpoint address="rest"
						binding="webHttpBinding"
						contract="Pacagroup.Comercial.Creditos.Contrato.IClienteService"
						bindingConfiguration="EnlaceHTTPRest"
						behaviorConfiguration="webREST"></endpoint>
			  
			  
						
			  
		  </service>
		  <!--Este servicio es REST-->
	  <service name="Pacagroup.Comercial.Creditos.Implementacion.CreditoService"
			   behaviorConfiguration="ServiceBehavior">
		   <endpoint address=""
						binding="basicHttpBinding"	
						bindingConfiguration="EnlaceHttp"	
						contract="Pacagroup.Comercial.Creditos.Contrato.ICreditoService"></endpoint>
			  <endpoint address=""
						binding="netTcpBinding"
						bindingConfiguration="EnlaceTcp"
						contract="Pacagroup.Comercial.Creditos.Contrato.ICreditoService"></endpoint>
			  <!--Aquí va el endpoint  REST-->
			  <endpoint address="rest"
						binding="webHttpBinding"
						contract="Pacagroup.Comercial.Creditos.Contrato.ICreditoService"
						bindingConfiguration="EnlaceHTTPRest"
						behaviorConfiguration="webREST"></endpoint>
	  </service>
	  </services>
    <behaviors>
		<!--Este endpointbehavior es para REST-->
		<endpointBehaviors>
			<behavior name="webREST">
				<!--El atributo helpEnabled permite acceder a la metadata y especificación del servicio REST-->
				<webHttp helpEnabled="true"/>
			</behavior>
		</endpointBehaviors>
      <serviceBehaviors>
        <behavior name="ServiceBehavior">
          <!-- Para evitar revelar información de los metadatos, establezca el valor siguiente en false antes de la implementación -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true"/>
          <!-- Para recibir detalles de los errores de la excepción para la depuración, establezca el valor siguiente en true. Establézcalo en false antes de la implementación para evitar revelar información de la excepción -->
          <serviceDebug includeExceptionDetailInFaults="false"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <protocolMapping>
       <!-- <add binding="basicHttpsBinding" scheme="https" /> -->
	<add binding="basicHttpBinding" scheme="http" />
    </protocolMapping>    
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.webServer>
	  <!--Colocamos este handler para remover WebDAV, en caso de que el IIS este configuradoo con ello, ya que,
	  si sí lo está, existirá un problema con los verbos PUT y DELETE-->
	  <handlers>
		  <remove name="WebDAV"/>
	  </handlers>
	  <modules runAllManagedModulesForAllRequests="true">
		  <!--Colocamos este remove para remover WebDAV, en caso de que el IIS este configuradoo con ello, ya que,
	  si sí lo está, existirá un problema con los verbos PUT y DELETE-->
		  <remove name="WebDAVmodule"/>
	  </modules>
	  
    <!--
        Para examinar el directorio raíz de la aplicación web durante la depuración, establezca el valor siguiente en true.
        Establézcalo en false antes de la implementación para evitar revelar información sobre la carpeta de aplicación web.
      -->
    <directoryBrowse enabled="true"/>
  </system.webServer>

</configuration>
